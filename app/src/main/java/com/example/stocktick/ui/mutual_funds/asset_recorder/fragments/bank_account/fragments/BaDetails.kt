package com.example.stocktick.ui.mutual_funds.asset_recorder.fragments.bank_account.fragments

import android.os.Bundle
import android.view.View
import androidx.fragment.app.Fragment
import androidx.fragment.app.activityViewModels
import androidx.navigation.findNavController
import androidx.navigation.fragment.navArgs
import com.example.stocktick.R
import com.example.stocktick.databinding.FragmentBaDetailsBinding
import com.example.stocktick.ui.mutual_funds.asset_recorder.fragments.bank_account.BaViewModel
import com.example.stocktick.ui.mutual_funds.asset_recorder.models.domain.BaModel
class BaDetails : Fragment( R.layout.fragment_ba_details) {

    private lateinit var binding: FragmentBaDetailsBinding
    private val viewModel : BaViewModel by activityViewModels()

    private val args: BaDetailsArgs by navArgs()

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        val navController = view.findNavController()
        binding = FragmentBaDetailsBinding.bind(view)
        val details : BaModel? = try {
            viewModel.getElement(
                position = args.position
            )
        } catch (e: IndexOutOfBoundsException){
            null
        }
        if (details == null) navController.navigateUp()

        binding.fabEdit.setOnClickListener{
            val action = BaDetailsDirections.actionBaDetaisToBaDetailsEdit(args.position)
            view.findNavController().navigate(action)
        }

        //autogenerated
        if (details!!.bank_name.isEmpty()){
            binding.bankName.visibility = View.GONE
            binding.bankNameLabel.visibility = View.GONE}
        else {
            binding.bankName.text = details.bank_name
        }

        if (details!!.branch_address.isEmpty()){
            binding.branchAddress.visibility = View.GONE
            binding.branchAddressLabel.visibility = View.GONE}
        else {
            binding.branchAddress.text = details.branch_address
        }

        if (details!!.account_holder_name.isEmpty()){
            binding.accountHolderName.visibility = View.GONE
            binding.accountHolderNameLabel.visibility = View.GONE}
        else {
            binding.accountHolderName.text = details.account_holder_name
        }

        if (details!!.last_4_digit_of_account_number.isEmpty()){
            binding.last4DigitOfAccountNumber.visibility = View.GONE
            binding.last4DigitOfAccountNumberLabel.visibility = View.GONE}
        else {
            binding.last4DigitOfAccountNumber.text = details.last_4_digit_of_account_number
        }

        if (details!!.account_type.isEmpty()){
            binding.accountType.visibility = View.GONE
            binding.accountTypeLabel.visibility = View.GONE}
        else {
            binding.accountType.text = details.account_type
        }

        if (details!!.nominee_name.isEmpty()){
            binding.nomineeName.visibility = View.GONE
            binding.nomineeNameLabel.visibility = View.GONE}
        else {
            binding.nomineeName.text = details.nominee_name
        }

        if (details!!.relationship.isEmpty()){
            binding.relationship.visibility = View.GONE
            binding.relationshipLabel.visibility = View.GONE}
        else {
            binding.relationship.text = details.relationship
        }

        if (details!!.allocation_percent.isEmpty()){
            binding.allocationPercent.visibility = View.GONE
            binding.allocationPercentLabel.visibility = View.GONE}
        else {
            binding.allocationPercent.text = details.allocation_percent
        }

        if (details!!.nominee_name2_.isEmpty()){
            binding.nomineeName2.visibility = View.GONE
            binding.nomineeName2Label.visibility = View.GONE}
        else {
            binding.nomineeName2.text = details.nominee_name2_
        }

        if (details!!.relationship2.isEmpty()){
            binding.Relationship2.visibility = View.GONE
            binding.Relationship2Label.visibility = View.GONE}
        else {
            binding.Relationship2.text = details.relationship2
        }

        if (details!!.allocation_percent2.isEmpty()){
            binding.allocationPercent2.visibility = View.GONE
            binding.allocationPercent2Label.visibility = View.GONE}
        else {
            binding.allocationPercent2.text = details.allocation_percent2
        }

    }
}